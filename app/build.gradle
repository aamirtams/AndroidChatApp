apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
repositories {
    maven { url 'https://maven.fabric.io/public' }
}
android {
    signingConfigs {
        config {
            keyAlias 'zamkeyalias'
            keyPassword '9990921294@A'
            storeFile file('C:/Users/Aamir/.android/zamkey.jks')
            storePassword '9990921294@A'
        }
    }
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.applozic.mobicomkit.sample"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 8
        versionName "8.0"
        multiDexEnabled true
        signingConfig signingConfigs.config
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {

        abortOnError false

    }
    // Specify that we want to split up the APK based on ABI
   /* splits {
        abi {
            // Enable ABI split
            enable true

            // Clear list of ABIs
            reset()

            // Specify each architecture currently supported by the Video SDK
           // include "armeabi-v7a", "arm64-v8a", "x86", "x86_64"

            // Specify that we do not want an additional universal SDK
            universalApk true
        }
    }*/
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ECLIPSE_.SF'
        exclude 'META-INF/ECLIPSE_.RSA'
    }
    productFlavors {
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':audiovideo')
    //should be enabled only for ui modifications
    //compile 'com.applozic.communication.uiwidget:audiovideo:1.2'
    compile 'com.github.ksoichiro:android-observablescrollview:1.6.0'
    compile 'com.google.firebase:firebase-auth:11.0.0'
    compile 'net.rimoto:intlphoneinput:0.9.3'
    compile 'com.android.support:support-v4:25.1.1'
    compile 'com.android.support:appcompat-v7:25.1.1'
    compile 'com.android.support:design:25.1.1'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.android.support:preference-v7:25.1.1'
    compile 'com.google.firebase:firebase-ads:11.0.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.7@aar') {
        transitive = true;
    }
}
apply plugin: 'com.google.gms.google-services'
